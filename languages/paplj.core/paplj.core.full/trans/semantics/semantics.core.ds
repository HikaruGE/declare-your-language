module trans/semantics/semantics_varschemes_typeannos_noaliases_factorized_explimpl_factorized_explicated_unified_copyprop_constantprop

signature
    sorts
      This
      loadClass__Arrow
      initClasses__Arrow
      initObject__Arrow
      initSuper__Arrow
      initFields__Arrow
      initMethods__Arrow
      defaultValue__Arrow
      readField__Arrow
      writeField__Arrow
      lookupField__Arrow
      lookupMethod__Arrow
      Obj
      Super
      FieldSet
      Program
      Class
      Field
      Method
      Param
      Extends
      Expr
      Block
      Seq
      Bind
      Type
      V
      Unit
      bindVar__Arrow
      readVar__Arrow
      bindVars__Arrow
      allocate__Arrow
      write__Arrow
      read__Arrow
    constructors
      NumV : Int -> V 
      BoolV : Bool -> V 
      NullV : V 
      ExceptionV : V 
      T : Obj -> This {implicit}
      loadClass : String -> loadClass__Arrow 
      initClasses : List(Class) -> initClasses__Arrow 
      ObjV : String * Super * Map<String,Int> * Map<String,Method> -> Obj 
      Super : Obj -> Super {implicit}
      NoSuper : Super 
      o2v : Obj -> V {implicit}
      initObject : Class -> initObject__Arrow 
      initSuper : Extends -> initSuper__Arrow 
      initFields : List(Field) -> initFields__Arrow 
      initMethods : List(Method) -> initMethods__Arrow 
      defaultValue : Type -> defaultValue__Arrow 
      readField : Obj * String * String -> readField__Arrow 
      writeField : Obj * String * String * V -> writeField__Arrow 
      lookupField : Obj * String * String -> lookupField__Arrow 
      lookupMethod : Obj * String -> lookupMethod__Arrow 
      Program : String * List(Class) * Expr -> Program 
      Class : String * Extends * List(Field) * List(Method) -> Class 
      NoExtends : Extends 
      Extends : String -> Extends 
      Field : Type * String -> Field 
      Method : Type * String * List(Param) * Block -> Method 
      Param : Type * String -> Param 
      Num : String -> Expr 
      Min : Expr -> Expr 
      Add : Expr * Expr -> Expr 
      Sub : Expr * Expr -> Expr 
      Mul : Expr * Expr -> Expr 
      True : Expr 
      False : Expr 
      Not : Expr -> Expr 
      And : Expr * Expr -> Expr 
      Or : Expr * Expr -> Expr 
      Eq : Expr * Expr -> Expr 
      Neq : Expr * Expr -> Expr 
      Lt : Expr * Expr -> Expr 
      If : Expr * Expr * Expr -> Expr 
      block2expr : Block -> Expr {implicit}
      Do : List(Seq) -> Block 
      expr2seq : Expr -> Seq {implicit}
      Skip : Seq 
      Var : String -> Expr 
      Let : List(Bind) * Expr -> Expr 
      Bind : Type * String * Expr -> Bind 
      Get : Expr * Type * String -> Expr 
      Set : Expr * Type * String * Expr -> Expr 
      Call : Expr * String * List(Expr) -> Expr 
      New : String -> Expr 
      This : Expr 
      Null : String -> Expr 
      Cast : String * Expr -> Expr 
      NumT : Type 
      BoolT : Type 
      UnitT : Type 
      ClassT : String -> Type 
      U : Unit 
      u2v : Unit -> V {implicit}
      bindVar : String * V -> bindVar__Arrow 
      readVar : String -> readVar__Arrow 
      bindVars : List(String) * List(V) -> bindVars__Arrow 
      allocate : V -> allocate__Arrow 
      write : Int * V -> write__Arrow 
      read : Int -> read__Arrow 
    native constructors
    native operators
      plusI : Int * Int -> Int
      minusI : Int * Int -> Int
      timesI : Int * Int -> Int
      gtI : Int * Int -> Bool
      eqI : Int * Int -> Bool
      modI : Int * Int -> Int
      str2int : String -> Int
    arrows
      Program -default-> V
      Expr -default-> V
      List(Expr) -default-> List(V)
      loadClass__Arrow -default-> Class
      initClasses__Arrow -default-> Map<String,Class>
      initObject__Arrow -default-> Obj
      initSuper__Arrow -default-> Super
      initFields__Arrow -default-> Map<String,Int>
      initMethods__Arrow -default-> Map<String,Method>
      defaultValue__Arrow -default-> V
      readField__Arrow -default-> V
      writeField__Arrow -default-> V
      lookupField__Arrow -default-> Int
      lookupMethod__Arrow -default-> Method
      List(Param) -default-> List(String)
      bindVar__Arrow -default-> Map<String,V>
      readVar__Arrow -default-> V
      bindVars__Arrow -default-> Map<String,V>
      allocate__Arrow -default-> Int
      write__Arrow -default-> V
      read__Arrow -default-> V
    native datatypes
    variables
      C : Map<String,Class>
      FM : Map<String,Int>
      MM : Map<String,Method>
      o : Obj
      v : V
      E : Map<String,V>
      S : Map<Int,V>

rules

  Map<String,Class> l_string_class_in1880, Map<String,V> l_string_v_in1880, This this_in1880 |- loadClass(c37800000) :: Map<Int,V> l_int_v_in1880 -default-> result_out1880 :: Map<Int,V> l_int_v_out1880
  where
    l_string_class_in1880 => C3700000;
    l_string_v_in1880 => l_string_v_11930;
    this_in1880 => this_11970;
    l_int_v_in1880 => l_int_v_11930;
    C3700000[c37800000] => lifted_1469000;
    l_int_v_11930 => l_int_v_out1880;
    lifted_1469000 => result_out1880.

  Map<String,Class> l_string_class_in1890, Map<String,V> l_string_v_in1890, This this_in1890 |- initClasses(lifted_1517000) :: Map<Int,V> l_int_v_in1890 -default-> result_out1890 :: Map<Int,V> l_int_v_out1890
  where
    l_string_class_in1890 => l_string_class_11970;
    l_string_v_in1890 => l_string_v_11940;
    this_in1890 => this_11980;
    l_int_v_in1890 => l_int_v_11940;
    lifted_1517000 == [  ]
    < {
        {} => lifted_1516000;
        lifted_1516000 : Map<String,Class> => lifted_1515000;
        l_int_v_11940 => l_int_v_out1890;
        lifted_1515000 => result_out1890
      }
    + {
        lifted_1517000 => [ c38100000 | cs4600000 ];
        c38100000 => Class(name11300000, lifted_1382000, lifted_1383000, lifted_1384000);
        {name11300000 |--> c38100000} => lifted_1520000;
        initClasses(cs4600000) => lifted_1521000;
        Map<String,Class> l_string_class_11970, Map<String,V> l_string_v_11940, This this_11980 |- lifted_1521000 :: Map<Int,V> l_int_v_11940 -default-> lifted_166300 :: Map<Int,V> l_int_v_21450;
        lifted_1520000 + lifted_166300 => lifted_1518000;
        l_int_v_21450 => l_int_v_out1890;
        lifted_1518000 => result_out1890
      }.

  Map<String,Class> l_string_class_in1910, Map<String,V> l_string_v_in1910, This this_in1910 |- initObject(lifted_1485000) :: Map<Int,V> l_int_v_in1910 -default-> result_out1910 :: Map<Int,V> l_int_v_out1910
  where
    l_string_class_in1910 => l_string_class_11980;
    l_string_v_in1910 => l_string_v_11950;
    this_in1910 => this_11990;
    l_int_v_in1910 => l_int_v_11950;
    lifted_1485000 => Class(c38000000, ext3700000, fs15000000, ms15000000);
    initSuper(ext3700000) => lifted_1487000;
    initFields(fs15000000) => lifted_1488000;
    initMethods(ms15000000) => lifted_1489000;
    Map<String,Class> l_string_class_11980, Map<String,V> l_string_v_11950, This this_11990 |- lifted_1487000 :: Map<Int,V> l_int_v_11950 -default-> lifted_165400 :: Map<Int,V> l_int_v_21460;
    Map<String,Class> l_string_class_11980, Map<String,V> l_string_v_11950, This this_11990 |- lifted_1488000 :: Map<Int,V> l_int_v_21460 -default-> lifted_165500 :: Map<Int,V> l_int_v_3950;
    Map<String,Class> l_string_class_11980, Map<String,V> l_string_v_11950, This this_11990 |- lifted_1489000 :: Map<Int,V> l_int_v_3950 -default-> lifted_165600 :: Map<Int,V> l_int_v_4170;
    ObjV(c38000000, lifted_165400, lifted_165500, lifted_165600) => lifted_1486000;
    l_int_v_4170 => l_int_v_out1910;
    lifted_1486000 => result_out1910.

  Map<String,Class> l_string_class_in1920, Map<String,V> l_string_v_in1920, This this_in1920 |- initSuper(lifted_1482000) :: Map<Int,V> l_int_v_in1920 -default-> result_out1920 :: Map<Int,V> l_int_v_out1920
  where
    l_string_class_in1920 => l_string_class_11990;
    l_string_v_in1920 => l_string_v_11960;
    this_in1920 => this_12010;
    l_int_v_in1920 => l_int_v_11960;
    lifted_1482000 => NoExtends()
    < {
        NoSuper() => lifted_1481000;
        l_int_v_11960 => l_int_v_out1920;
        lifted_1481000 => result_out1920
      }
    + {
        lifted_1482000 => Extends(c37900000);
        loadClass(c37900000) => lifted_1484000;
        Map<String,Class> l_string_class_11990, Map<String,V> l_string_v_11960, This this_12010 |- lifted_1484000 :: Map<Int,V> l_int_v_11960 -default-> lifted_164800 :: Map<Int,V> l_int_v_21470;
        initObject(lifted_164800) => lifted_1483000;
        Map<String,Class> l_string_class_11990, Map<String,V> l_string_v_11960, This this_12010 |- lifted_1483000 :: Map<Int,V> l_int_v_21470 -default-> lifted_165200 :: Map<Int,V> l_int_v_3960;
        Super(lifted_165200) => lifted_165100;
        l_int_v_3960 => l_int_v_out1920;
        lifted_165100 => result_out1920
      }.

  Map<String,Class> l_string_class_in1930, Map<String,V> l_string_v_in1930, This this_in1930 |- initFields(lifted_1503000) :: Map<Int,V> l_int_v_in1930 -default-> result_out1930 :: Map<Int,V> l_int_v_out1930
  where
    l_string_class_in1930 => l_string_class_12010;
    l_string_v_in1930 => l_string_v_11970;
    this_in1930 => this_12020;
    l_int_v_in1930 => l_int_v_11970;
    lifted_1503000 == [  ]
    < {
        {} => lifted_1502000;
        lifted_1502000 : Map<String,Int> => lifted_1501000;
        l_int_v_11970 => l_int_v_out1930;
        lifted_1501000 => result_out1930
      }
    + {
        lifted_1503000 => [ lifted_1505000 | fs15100000 ];
        lifted_1505000 => Field(t4000000, f20400000);
        defaultValue(t4000000) => lifted_1506000;
        Map<String,Class> l_string_class_12010, Map<String,V> l_string_v_11970, This this_12020 |- lifted_1506000 :: Map<Int,V> l_int_v_11970 -default-> v18100000 :: Map<Int,V> l_int_v_21480;
        initFields(fs15100000) => lifted_1508000;
        Map<String,Class> l_string_class_12010, Map<String,V> l_string_v_11970, This this_12020 |- lifted_1508000 :: Map<Int,V> l_int_v_21480 -default-> FM3700000 :: Map<Int,V> l_int_v_3970;
        allocate(v18100000) => lifted_1513000;
        {f20400000 |--> lifted_1513000} => lifted_1512000;
        lifted_1512000 + FM3700000 => lifted_1504000;
        l_int_v_3970 => l_int_v_out1930;
        lifted_1504000 => result_out1930
      }.

  Map<String,Class> l_string_class_in1940, Map<String,V> l_string_v_in1940, This this_in1940 |- initMethods(lifted_1494000) :: Map<Int,V> l_int_v_in1940 -default-> result_out1940 :: Map<Int,V> l_int_v_out1940
  where
    l_string_class_in1940 => l_string_class_12020;
    l_string_v_in1940 => l_string_v_11980;
    this_in1940 => this_12030;
    l_int_v_in1940 => l_int_v_11980;
    lifted_1494000 == [  ]
    < {
        {} => lifted_1493000;
        lifted_1493000 : Map<String,Method> => lifted_1492000;
        l_int_v_11980 => l_int_v_out1940;
        lifted_1492000 => result_out1940
      }
    + {
        lifted_1494000 => [ m12000000 | ms15100000 ];
        m12000000 => Method(lifted_1378000, name11200000, lifted_1379000, lifted_1381000);
        {name11200000 |--> m12000000} => lifted_1497000;
        initMethods(ms15100000) => lifted_1498000;
        Map<String,Class> l_string_class_12020, Map<String,V> l_string_v_11980, This this_12030 |- lifted_1498000 :: Map<Int,V> l_int_v_11980 -default-> lifted_166100 :: Map<Int,V> l_int_v_21490;
        lifted_1497000 + lifted_166100 => lifted_1495000;
        l_int_v_21490 => l_int_v_out1940;
        lifted_1495000 => result_out1940
      }.

  Map<String,Class> l_string_class_in1950, Map<String,V> l_string_v_in1950, This this_in1950 |- defaultValue(lifted_1551000) :: Map<Int,V> l_int_v_in1950 -default-> result_out1950 :: Map<Int,V> l_int_v_out1950
  where
    l_string_class_in1950 => l_string_class_12030;
    l_string_v_in1950 => l_string_v_11990;
    this_in1950 => this_12040;
    l_int_v_in1950 => l_int_v_11990;
    lifted_1551000 => NumT()
    < {
        0 => lifted_1547000;
        NumV(lifted_1547000) => lifted_1546000;
        l_int_v_11990 => l_int_v_out1950;
        lifted_1546000 => result_out1950
      }
    + {
        lifted_1551000 => BoolT()
        < {
            false => lifted_1550000;
            BoolV(lifted_1550000) => lifted_1549000;
            l_int_v_11990 => l_int_v_out1950;
            lifted_1549000 => result_out1950
          }
        + {
            lifted_1551000 => ClassT(lifted_1389000);
            NullV() => lifted_1552000;
            l_int_v_11990 => l_int_v_out1950;
            lifted_1552000 => result_out1950
          }
      }.

  Map<String,Class> l_string_class_in1960, Map<String,V> l_string_v_in1960, This this_in1960 |- readField(o17900000, c37400000, f20100000) :: Map<Int,V> l_int_v_in1960 -default-> result_out1960 :: Map<Int,V> l_int_v_out1960
  where
    l_string_class_in1960 => l_string_class_12040;
    l_string_v_in1960 => l_string_v_12010;
    this_in1960 => this_12050;
    l_int_v_in1960 => l_int_v_12010;
    lookupField(o17900000, c37400000, f20100000) => lifted_1418000;
    Map<String,Class> l_string_class_12040, Map<String,V> l_string_v_12010, This this_12050 |- lifted_1418000 :: Map<Int,V> l_int_v_12010 -default-> lifted_161500 :: Map<Int,V> l_int_v_21510;
    read(lifted_161500) => lifted_1417000;
    Map<String,Class> l_string_class_12040, Map<String,V> l_string_v_12010, This this_12050 |- lifted_1417000 :: Map<Int,V> l_int_v_21510 -default-> lifted_161700 :: Map<Int,V> l_int_v_3980;
    l_int_v_3980 => l_int_v_out1960;
    lifted_161700 => result_out1960.

  Map<String,Class> l_string_class_in1970, Map<String,V> l_string_v_in1970, This this_in1970 |- writeField(o17600000, c37200000, f19900000, v17500000) :: Map<Int,V> l_int_v_in1970 -default-> result_out1970 :: Map<Int,V> l_int_v_out1970
  where
    l_string_class_in1970 => l_string_class_12050;
    l_string_v_in1970 => l_string_v_12020;
    this_in1970 => this_12060;
    l_int_v_in1970 => l_int_v_12020;
    lookupField(o17600000, c37200000, f19900000) => lifted_1398000;
    Map<String,Class> l_string_class_12050, Map<String,V> l_string_v_12020, This this_12060 |- lifted_1398000 :: Map<Int,V> l_int_v_12020 -default-> lifted_159800 :: Map<Int,V> l_int_v_21520;
    write(lifted_159800, v17500000) => lifted_1397000;
    Map<String,Class> l_string_class_12050, Map<String,V> l_string_v_12020, This this_12060 |- lifted_1397000 :: Map<Int,V> l_int_v_21520 -default-> lifted_160000 :: Map<Int,V> l_int_v_3990;
    l_int_v_3990 => l_int_v_out1970;
    lifted_160000 => result_out1970.

  Map<String,Class> l_string_class_in1980, Map<String,V> l_string_v_in1980, This this_in1980 |- lookupField(lifted_1466000, c211500000, f20300000) :: Map<Int,V> l_int_v_in1980 -default-> result_out1980 :: Map<Int,V> l_int_v_out1980
  where
    l_string_class_in1980 => l_string_class_12060;
    l_string_v_in1980 => l_string_v_12030;
    this_in1980 => this_12070;
    l_int_v_in1980 => l_int_v_12030;
    lifted_1466000 => ObjV(c113500000, sup15100000, fs14900000, lifted_1376000);
    c113500000 == c211500000
    < {
        fs14900000[f20300000] => lifted_1465000;
        l_int_v_12030 => l_int_v_out1980;
        lifted_1465000 => result_out1980
      }
    + {
        c113500000 != c211500000;
        sup15100000 => Super(o18100000);
        lookupField(o18100000, c211500000, f20300000) => lifted_1467000;
        Map<String,Class> l_string_class_12060, Map<String,V> l_string_v_12030, This this_12070 |- lifted_1467000 :: Map<Int,V> l_int_v_12030 -default-> lifted_164200 :: Map<Int,V> l_int_v_21530;
        l_int_v_21530 => l_int_v_out1980;
        lifted_164200 => result_out1980
      }.

  Map<String,Class> l_string_class_in1990, Map<String,V> l_string_v_in1990, This this_in1990 |- lookupMethod(lifted_1459000, name11100000) :: Map<Int,V> l_int_v_in1990 -default-> result_out1990 :: Map<Int,V> l_int_v_out1990
  where
    try {
        l_string_class_in1990 => l_string_class_12070;
        l_string_v_in1990 => l_string_v_12040;
        this_in1990 => this_12080;
        l_int_v_in1990 => l_int_v_12040;
        lifted_1459000 => ObjV(c37600000, sup14800000, lifted_1373000, ms14800000);
        ms14800000[name11100000] => m11800000;
        l_int_v_12040 => l_int_v_out1990;
        m11800000 => result_out1990
      }
    or  {
        l_string_class_in1990 => l_string_class_12080;
        l_string_v_in1990 => l_string_v_12050;
        this_in1990 => this_12090;
        l_int_v_in1990 => l_int_v_12050;
        lifted_1459000 => ObjV(c37700000, sup14900000, lifted_1374000, ms14900000);
        sup14900000 => Super(o18000000);
        lookupMethod(o18000000, name11100000) => lifted_1462000;
        Map<String,Class> l_string_class_12080, Map<String,V> l_string_v_12050, This this_12090 |- lifted_1462000 :: Map<Int,V> l_int_v_12050 -default-> lifted_164000 :: Map<Int,V> l_int_v_21540;
        l_int_v_21540 => l_int_v_out1990;
        lifted_164000 => result_out1990
      }.

  Map<String,Class> l_string_class_in2010, Map<String,V> l_string_v_in2010, This this_in2010 |- Program(lifted_1369000, cs4500000, e5800000) :: Map<Int,V> l_int_v_in2010 -default-> result_out2010 :: Map<Int,V> l_int_v_out2010
  where
    l_string_class_in2010 => l_string_class_12090;
    l_string_v_in2010 => l_string_v_12060;
    this_in2010 => this_12120;
    l_int_v_in2010 => l_int_v_12060;
    initClasses(cs4500000) => lifted_161900;
    Map<String,Class> l_string_class_12090, Map<String,V> l_string_v_12060, This this_12120 |- e5800000 :: Map<Int,V> l_int_v_12060 -default-> v17800000 :: Map<Int,V> l_int_v_21550;
    l_int_v_21550 => l_int_v_out2010;
    v17800000 => result_out2010.

  Map<String,Class> l_string_class_in2020, Map<String,V> l_string_v_in2020, This this_in2020 |- Num(i5200000) :: Map<Int,V> l_int_v_in2020 -default-> result_out2020 :: Map<Int,V> l_int_v_out2020
  where
    l_string_class_in2020 => l_string_class_12120;
    l_string_v_in2020 => l_string_v_12070;
    this_in2020 => this_12130;
    l_int_v_in2020 => l_int_v_12070;
    str2int(i5200000) => lifted_1431000;
    NumV(lifted_1431000) => lifted_1429000;
    l_int_v_12070 => l_int_v_out2020;
    lifted_1429000 => result_out2020.

  Map<String,Class> l_string_class_in2030, Map<String,V> l_string_v_in2030, This this_in2030 |- Min(lifted_1451000) :: Map<Int,V> l_int_v_in2030 -default-> result_out2030 :: Map<Int,V> l_int_v_out2030
  where
    l_string_class_in2030 => l_string_class_12130;
    l_string_v_in2030 => l_string_v_12080;
    this_in2030 => this_12140;
    l_int_v_in2030 => l_int_v_12080;
    Map<String,Class> l_string_class_12130, Map<String,V> l_string_v_12080, This this_12140 |- lifted_1451000 :: Map<Int,V> l_int_v_12080 -default-> lifted_163700 :: Map<Int,V> l_int_v_21560;
    lifted_163700 => NumV(i5400000);
    0 => lifted_1454000;
    minusI(lifted_1454000, i5400000) => lifted_1453000;
    NumV(lifted_1453000) => lifted_1452000;
    l_int_v_21560 => l_int_v_out2030;
    lifted_1452000 => result_out2030.

  Map<String,Class> l_string_class_in2040, Map<String,V> l_string_v_in2040, This this_in2040 |- Add(lifted_1583000, lifted_1584000) :: Map<Int,V> l_int_v_in2040 -default-> result_out2040 :: Map<Int,V> l_int_v_out2040
  where
    l_string_class_in2040 => l_string_class_12140;
    l_string_v_in2040 => l_string_v_12090;
    this_in2040 => this_12150;
    l_int_v_in2040 => l_int_v_12090;
    Map<String,Class> l_string_class_12140, Map<String,V> l_string_v_12090, This this_12150 |- lifted_1583000 :: Map<Int,V> l_int_v_12090 -default-> lifted_170900 :: Map<Int,V> l_int_v_21570;
    lifted_170900 => NumV(i5700000);
    Map<String,Class> l_string_class_12140, Map<String,V> l_string_v_12090, This this_12150 |- lifted_1584000 :: Map<Int,V> l_int_v_21570 -default-> lifted_170800 :: Map<Int,V> l_int_v_31010;
    lifted_170800 => NumV(j4000000);
    plusI(i5700000, j4000000) => lifted_1586000;
    NumV(lifted_1586000) => lifted_1585000;
    l_int_v_31010 => l_int_v_out2040;
    lifted_1585000 => result_out2040.

  Map<String,Class> l_string_class_in2050, Map<String,V> l_string_v_in2050, This this_in2050 |- Sub(lifted_1406000, lifted_1407000) :: Map<Int,V> l_int_v_in2050 -default-> result_out2050 :: Map<Int,V> l_int_v_out2050
  where
    l_string_class_in2050 => l_string_class_12150;
    l_string_v_in2050 => l_string_v_12120;
    this_in2050 => this_12160;
    l_int_v_in2050 => l_int_v_12120;
    Map<String,Class> l_string_class_12150, Map<String,V> l_string_v_12120, This this_12160 |- lifted_1406000 :: Map<Int,V> l_int_v_12120 -default-> lifted_160800 :: Map<Int,V> l_int_v_21580;
    lifted_160800 => NumV(i5100000);
    Map<String,Class> l_string_class_12150, Map<String,V> l_string_v_12120, This this_12160 |- lifted_1407000 :: Map<Int,V> l_int_v_21580 -default-> lifted_160700 :: Map<Int,V> l_int_v_31020;
    lifted_160700 => NumV(j3600000);
    minusI(i5100000, j3600000) => lifted_1409000;
    NumV(lifted_1409000) => lifted_1408000;
    l_int_v_31020 => l_int_v_out2050;
    lifted_1408000 => result_out2050.

  Map<String,Class> l_string_class_in2060, Map<String,V> l_string_v_in2060, This this_in2060 |- Mul(lifted_1446000, lifted_1447000) :: Map<Int,V> l_int_v_in2060 -default-> result_out2060 :: Map<Int,V> l_int_v_out2060
  where
    l_string_class_in2060 => l_string_class_12160;
    l_string_v_in2060 => l_string_v_12130;
    this_in2060 => this_12170;
    l_int_v_in2060 => l_int_v_12130;
    Map<String,Class> l_string_class_12160, Map<String,V> l_string_v_12130, This this_12170 |- lifted_1446000 :: Map<Int,V> l_int_v_12130 -default-> lifted_163600 :: Map<Int,V> l_int_v_21590;
    lifted_163600 => NumV(i5300000);
    Map<String,Class> l_string_class_12160, Map<String,V> l_string_v_12130, This this_12170 |- lifted_1447000 :: Map<Int,V> l_int_v_21590 -default-> lifted_163500 :: Map<Int,V> l_int_v_31030;
    lifted_163500 => NumV(j3700000);
    timesI(i5300000, j3700000) => lifted_1449000;
    NumV(lifted_1449000) => lifted_1448000;
    l_int_v_31030 => l_int_v_out2060;
    lifted_1448000 => result_out2060.

  Map<String,Class> l_string_class_in2070, Map<String,V> l_string_v_in2070, This this_in2070 |- True() :: Map<Int,V> l_int_v_in2070 -default-> result_out2070 :: Map<Int,V> l_int_v_out2070
  where
    l_string_class_in2070 => l_string_class_12170;
    l_string_v_in2070 => l_string_v_12140;
    this_in2070 => this_12180;
    l_int_v_in2070 => l_int_v_12140;
    true => lifted_1404000;
    BoolV(lifted_1404000) => lifted_1403000;
    l_int_v_12140 => l_int_v_out2070;
    lifted_1403000 => result_out2070.

  Map<String,Class> l_string_class_in2080, Map<String,V> l_string_v_in2080, This this_in2080 |- False() :: Map<Int,V> l_int_v_in2080 -default-> result_out2080 :: Map<Int,V> l_int_v_out2080
  where
    l_string_class_in2080 => l_string_class_12180;
    l_string_v_in2080 => l_string_v_12150;
    this_in2080 => this_12190;
    l_int_v_in2080 => l_int_v_12150;
    false => lifted_1531000;
    BoolV(lifted_1531000) => lifted_1529000;
    l_int_v_12150 => l_int_v_out2080;
    lifted_1529000 => result_out2080.

  Map<String,Class> l_string_class_in2090, Map<String,V> l_string_v_in2090, This this_in2090 |- Not(lifted_1437000) :: Map<Int,V> l_int_v_in2090 -default-> result_out2090 :: Map<Int,V> l_int_v_out2090
  where
    l_string_class_in2090 => l_string_class_12190;
    l_string_v_in2090 => l_string_v_12160;
    this_in2090 => this_12210;
    l_int_v_in2090 => l_int_v_12160;
    Map<String,Class> l_string_class_12190, Map<String,V> l_string_v_12160, This this_12210 |- lifted_1437000 :: Map<Int,V> l_int_v_12160 -default-> lifted_162600 :: Map<Int,V> l_int_v_21610;
    lifted_162600 => BoolV(lifted_1439000);
    lifted_1439000 == true
    < {
        false => lifted_1436000;
        BoolV(lifted_1436000) => lifted_1434000;
        l_int_v_21610 => l_int_v_out2090;
        lifted_1434000 => result_out2090
      }
    + {
        lifted_1439000 == false;
        true => lifted_1441000;
        BoolV(lifted_1441000) => lifted_1438000;
        l_int_v_21610 => l_int_v_out2090;
        lifted_1438000 => result_out2090
      }.

  Map<String,Class> l_string_class_in2120, Map<String,V> l_string_v_in2120, This this_in2120 |- And(lifted_1578000, e6400000) :: Map<Int,V> l_int_v_in2120 -default-> result_out2120 :: Map<Int,V> l_int_v_out2120
  where
    l_string_class_in2120 => l_string_class_12210;
    l_string_v_in2120 => l_string_v_12170;
    this_in2120 => this_12220;
    l_int_v_in2120 => l_int_v_12170;
    Map<String,Class> l_string_class_12210, Map<String,V> l_string_v_12170, This this_12220 |- lifted_1578000 :: Map<Int,V> l_int_v_12170 -default-> lifted_170500 :: Map<Int,V> l_int_v_21620;
    lifted_170500 => BoolV(lifted_1579000);
    lifted_1579000 == false
    < {
        false => lifted_1577000;
        BoolV(lifted_1577000) => lifted_1575000;
        l_int_v_21620 => l_int_v_out2120;
        lifted_1575000 => result_out2120
      }
    + {
        lifted_1579000 == true;
        Map<String,Class> l_string_class_12210, Map<String,V> l_string_v_12170, This this_12220 |- e6400000 :: Map<Int,V> l_int_v_21620 -default-> lifted_170600 :: Map<Int,V> l_int_v_31040;
        l_int_v_31040 => l_int_v_out2120;
        lifted_170600 => result_out2120
      }.

  Map<String,Class> l_string_class_in2130, Map<String,V> l_string_v_in2130, This this_in2130 |- Or(lifted_1427000, e5900000) :: Map<Int,V> l_int_v_in2130 -default-> result_out2130 :: Map<Int,V> l_int_v_out2130
  where
    l_string_class_in2130 => l_string_class_12220;
    l_string_v_in2130 => l_string_v_12180;
    this_in2130 => this_12230;
    l_int_v_in2130 => l_int_v_12180;
    Map<String,Class> l_string_class_12220, Map<String,V> l_string_v_12180, This this_12230 |- lifted_1427000 :: Map<Int,V> l_int_v_12180 -default-> lifted_162200 :: Map<Int,V> l_int_v_21630;
    lifted_162200 => BoolV(lifted_1428000);
    lifted_1428000 == true
    < {
        true => lifted_1426000;
        BoolV(lifted_1426000) => lifted_1424000;
        l_int_v_21630 => l_int_v_out2130;
        lifted_1424000 => result_out2130
      }
    + {
        lifted_1428000 == false;
        Map<String,Class> l_string_class_12220, Map<String,V> l_string_v_12180, This this_12230 |- e5900000 :: Map<Int,V> l_int_v_21630 -default-> lifted_162300 :: Map<Int,V> l_int_v_31050;
        l_int_v_31050 => l_int_v_out2130;
        lifted_162300 => result_out2130
      }.

  Map<String,Class> l_string_class_in2140, Map<String,V> l_string_v_in2140, This this_in2140 |- Eq(lifted_1532000, lifted_1533000) :: Map<Int,V> l_int_v_in2140 -default-> result_out2140 :: Map<Int,V> l_int_v_out2140
  where
    l_string_class_in2140 => l_string_class_12230;
    l_string_v_in2140 => l_string_v_12190;
    this_in2140 => this_12240;
    l_int_v_in2140 => l_int_v_12190;
    Map<String,Class> l_string_class_12230, Map<String,V> l_string_v_12190, This this_12240 |- lifted_1532000 :: Map<Int,V> l_int_v_12190 -default-> lifted_167700 :: Map<Int,V> l_int_v_21640;
    lifted_167700 => NumV(i5600000);
    Map<String,Class> l_string_class_12230, Map<String,V> l_string_v_12190, This this_12240 |- lifted_1533000 :: Map<Int,V> l_int_v_21640 -default-> lifted_167600 :: Map<Int,V> l_int_v_31060;
    lifted_167600 => NumV(j3900000);
    eqI(i5600000, j3900000) => lifted_1535000;
    BoolV(lifted_1535000) => lifted_1534000;
    l_int_v_31060 => l_int_v_out2140;
    lifted_1534000 => result_out2140.

  Map<String,Class> l_string_class_in2150, Map<String,V> l_string_v_in2150, This this_in2150 |- Neq(e11500000, e21400000) :: Map<Int,V> l_int_v_in2150 -default-> result_out2150 :: Map<Int,V> l_int_v_out2150
  where
    l_string_class_in2150 => l_string_class_12240;
    l_string_v_in2150 => l_string_v_12210;
    this_in2150 => this_12250;
    l_int_v_in2150 => l_int_v_12210;
    Eq(e11500000, e21400000) => lifted_1445000;
    Not(lifted_1445000) => lifted_1444000;
    Map<String,Class> l_string_class_12240, Map<String,V> l_string_v_12210, This this_12250 |- lifted_1444000 :: Map<Int,V> l_int_v_12210 -default-> lifted_163300 :: Map<Int,V> l_int_v_21650;
    l_int_v_21650 => l_int_v_out2150;
    lifted_163300 => result_out2150.

  Map<String,Class> l_string_class_in2160, Map<String,V> l_string_v_in2160, This this_in2160 |- Lt(lifted_1455000, lifted_1456000) :: Map<Int,V> l_int_v_in2160 -default-> result_out2160 :: Map<Int,V> l_int_v_out2160
  where
    l_string_class_in2160 => l_string_class_12250;
    l_string_v_in2160 => l_string_v_12220;
    this_in2160 => this_12260;
    l_int_v_in2160 => l_int_v_12220;
    Map<String,Class> l_string_class_12250, Map<String,V> l_string_v_12220, This this_12260 |- lifted_1455000 :: Map<Int,V> l_int_v_12220 -default-> lifted_163900 :: Map<Int,V> l_int_v_21660;
    lifted_163900 => NumV(i5500000);
    Map<String,Class> l_string_class_12250, Map<String,V> l_string_v_12220, This this_12260 |- lifted_1456000 :: Map<Int,V> l_int_v_21660 -default-> lifted_163800 :: Map<Int,V> l_int_v_31070;
    lifted_163800 => NumV(j3800000);
    gtI(j3800000, i5500000) => lifted_1458000;
    BoolV(lifted_1458000) => lifted_1457000;
    l_int_v_31070 => l_int_v_out2160;
    lifted_1457000 => result_out2160.

  Map<String,Class> l_string_class_in2170, Map<String,V> l_string_v_in2170, This this_in2170 |- If(lifted_1524000, lifted_1386000, e6200000) :: Map<Int,V> l_int_v_in2170 -default-> result_out2170 :: Map<Int,V> l_int_v_out2170
  where
    l_string_class_in2170 => l_string_class_12260;
    l_string_v_in2170 => l_string_v_12230;
    this_in2170 => this_12270;
    l_int_v_in2170 => l_int_v_12230;
    Map<String,Class> l_string_class_12260, Map<String,V> l_string_v_12230, This this_12270 |- lifted_1524000 :: Map<Int,V> l_int_v_12230 -default-> lifted_166800 :: Map<Int,V> l_int_v_21670;
    lifted_166800 => BoolV(lifted_1525000);
    lifted_1525000 == true
    < {
        Map<String,Class> l_string_class_12260, Map<String,V> l_string_v_12230, This this_12270 |- lifted_1386000 :: Map<Int,V> l_int_v_21670 -default-> lifted_166600 :: Map<Int,V> l_int_v_31080;
        l_int_v_31080 => l_int_v_out2170;
        lifted_166600 => result_out2170
      }
    + {
        lifted_1525000 == false;
        Map<String,Class> l_string_class_12260, Map<String,V> l_string_v_12230, This this_12270 |- e6200000 :: Map<Int,V> l_int_v_21670 -default-> lifted_166900 :: Map<Int,V> l_int_v_31090;
        l_int_v_31090 => l_int_v_out2170;
        lifted_166900 => result_out2170
      }.

  Map<String,Class> l_string_class_in2180, Map<String,V> l_string_v_in2180, This this_in2180 |- block2expr(lifted_168500) :: Map<Int,V> l_int_v_in2180 -default-> result_out2180 :: Map<Int,V> l_int_v_out2180
  where
    l_string_class_in2180 => l_string_class_12270;
    l_string_v_in2180 => l_string_v_12240;
    this_in2180 => this_12280;
    l_int_v_in2180 => l_int_v_12240;
    lifted_168500 => Do(lifted_1541000);
    lifted_1541000 == [  ]
    < {
        U() => lifted_1537000;
        u2v(lifted_1537000) => lifted_167900;
        l_int_v_12240 => l_int_v_out2180;
        lifted_167900 => result_out2180
      }
    + {
        lifted_1541000 => [ lifted_1543000 | stats600000 ];
        lifted_1543000 => expr2seq(lifted_168600);
        Map<String,Class> l_string_class_12270, Map<String,V> l_string_v_12240, This this_12280 |- lifted_168600 :: Map<Int,V> l_int_v_12240 -default-> v18300000 :: Map<Int,V> l_int_v_21680;
        stats600000 == [  ]
        < {
            l_int_v_21680 => l_int_v_out2180;
            v18300000 => result_out2180
          }
        + {
            stats600000 => [ lifted_1387000 | lifted_1388000 ];
            Do(stats600000) => lifted_1542000;
            block2expr(lifted_1542000) => lifted_168900;
            Map<String,Class> l_string_class_12270, Map<String,V> l_string_v_12240, This this_12280 |- lifted_168900 :: Map<Int,V> l_int_v_21680 -default-> lifted_168800 :: Map<Int,V> l_int_v_31120;
            l_int_v_31120 => l_int_v_out2180;
            lifted_168800 => result_out2180
          }
      }.

  Map<String,Class> l_string_class_in2190, Map<String,V> l_string_v_in2190, This this_in2190 |- Var(x28600000) :: Map<Int,V> l_int_v_in2190 -default-> result_out2190 :: Map<Int,V> l_int_v_out2190
  where
    l_string_class_in2190 => l_string_class_12280;
    l_string_v_in2190 => l_string_v_12250;
    this_in2190 => this_12290;
    l_int_v_in2190 => l_int_v_12250;
    readVar(x28600000) => lifted_1402000;
    Map<String,Class> l_string_class_12280, Map<String,V> l_string_v_12250, This this_12290 |- lifted_1402000 :: Map<Int,V> l_int_v_12250 -default-> lifted_160200 :: Map<Int,V> l_int_v_21690;
    l_int_v_21690 => l_int_v_out2190;
    lifted_160200 => result_out2190.

  Map<String,Class> l_string_class_in2210, Map<String,V> l_string_v_in2210, This this_in2210 |- Let(lifted_1473000, e6000000) :: Map<Int,V> l_int_v_in2210 -default-> result_out2210 :: Map<Int,V> l_int_v_out2210
  where
    l_string_class_in2210 => l_string_class_12290;
    l_string_v_in2210 => l_string_v_12260;
    this_in2210 => this_12310;
    l_int_v_in2210 => l_int_v_12260;
    lifted_1473000 == [  ]
    < {
        Map<String,Class> l_string_class_12290, Map<String,V> l_string_v_12260, This this_12310 |- e6000000 :: Map<Int,V> l_int_v_12260 -default-> v17900000 :: Map<Int,V> l_int_v_21710;
        l_int_v_21710 => l_int_v_out2210;
        v17900000 => result_out2210
      }
    + {
        lifted_1473000 => [ lifted_1474000 | binds600000 ];
        lifted_1474000 => Bind(lifted_1377000, x28800000, lifted_1478000);
        Map<String,Class> l_string_class_12290, Map<String,V> l_string_v_12260, This this_12310 |- lifted_1478000 :: Map<Int,V> l_int_v_12260 -default-> v18000000 :: Map<Int,V> l_int_v_21720;
        bindVar(x28800000, v18000000) => lifted_1475000;
        Let(binds600000, e6000000) => lifted_1476000;
        Map<String,Class> l_string_class_12290, Map<String,V> l_string_v_12260, This this_12310 |- lifted_1475000 :: Map<Int,V> l_int_v_21720 -default-> lifted_164500 :: Map<Int,V> l_int_v_31130;
        Map<String,Class> l_string_class_12290, Map<String,V> lifted_164500, This this_12310 |- lifted_1476000 :: Map<Int,V> l_int_v_31130 -default-> v'1200000 :: Map<Int,V> l_int_v_4180;
        l_int_v_4180 => l_int_v_out2210;
        v'1200000 => result_out2210
      }.

  Map<String,Class> l_string_class_in2220, Map<String,V> l_string_v_in2220, This this_in2220 |- Get(lifted_1526000, lifted_1527000, f20500000) :: Map<Int,V> l_int_v_in2220 -default-> result_out2220 :: Map<Int,V> l_int_v_out2220
  where
    l_string_class_in2220 => l_string_class_12310;
    l_string_v_in2220 => l_string_v_12270;
    this_in2220 => this_12320;
    l_int_v_in2220 => l_int_v_12270;
    Map<String,Class> l_string_class_12310, Map<String,V> l_string_v_12270, This this_12320 |- lifted_1526000 :: Map<Int,V> l_int_v_12270 -default-> lifted_167200 :: Map<Int,V> l_int_v_21730;
    lifted_167200 => o2v(o18200000);
    lifted_1527000 => ClassT(c38200000);
    readField(o18200000, c38200000, f20500000) => lifted_1528000;
    Map<String,Class> l_string_class_12310, Map<String,V> l_string_v_12270, This this_12320 |- lifted_1528000 :: Map<Int,V> l_int_v_21730 -default-> lifted_167400 :: Map<Int,V> l_int_v_31140;
    l_int_v_31140 => l_int_v_out2220;
    lifted_167400 => result_out2220.

  Map<String,Class> l_string_class_in2230, Map<String,V> l_string_v_in2230, This this_in2230 |- Set(lifted_1410000, lifted_1412000, f20000000, lifted_1413000) :: Map<Int,V> l_int_v_in2230 -default-> result_out2230 :: Map<Int,V> l_int_v_out2230
  where
    l_string_class_in2230 => l_string_class_12320;
    l_string_v_in2230 => l_string_v_12280;
    this_in2230 => this_12330;
    l_int_v_in2230 => l_int_v_12280;
    Map<String,Class> l_string_class_12320, Map<String,V> l_string_v_12280, This this_12330 |- lifted_1410000 :: Map<Int,V> l_int_v_12280 -default-> lifted_161100 :: Map<Int,V> l_int_v_21740;
    lifted_161100 => o2v(o17800000);
    lifted_1412000 => ClassT(c37300000);
    Map<String,Class> l_string_class_12320, Map<String,V> l_string_v_12280, This this_12330 |- lifted_1413000 :: Map<Int,V> l_int_v_21740 -default-> v17700000 :: Map<Int,V> l_int_v_31150;
    writeField(o17800000, c37300000, f20000000, v17700000) => lifted_1414000;
    Map<String,Class> l_string_class_12320, Map<String,V> l_string_v_12280, This this_12330 |- lifted_1414000 :: Map<Int,V> l_int_v_31150 -default-> lifted_161300 :: Map<Int,V> l_int_v_4190;
    l_int_v_4190 => l_int_v_out2230;
    lifted_161300 => result_out2230.

  Map<String,Class> l_string_class_in2240, Map<String,V> l_string_v_in2240, This this_in2240 |- Call(lifted_1553000, m12100000, lifted_1554000) :: Map<Int,V> l_int_v_in2240 -default-> result_out2240 :: Map<Int,V> l_int_v_out2240
  where
    l_string_class_in2240 => l_string_class_12330;
    l_string_v_in2240 => l_string_v_12290;
    this_in2240 => this_12340;
    l_int_v_in2240 => l_int_v_12290;
    Map<String,Class> l_string_class_12330, Map<String,V> l_string_v_12290, This this_12340 |- lifted_1553000 :: Map<Int,V> l_int_v_12290 -default-> lifted_170200 :: Map<Int,V> l_int_v_21750;
    lifted_170200 => o2v(o18300000);
    Map<String,Class> l_string_class_12330, Map<String,V> l_string_v_12290, This this_12340 |- lifted_1554000 :: Map<Int,V> l_int_v_21750 -default-> vs2700000 :: Map<Int,V> l_int_v_31160;
    lookupMethod(o18300000, m12100000) => lifted_1555000;
    Map<String,Class> l_string_class_12330, Map<String,V> l_string_v_12290, This this_12340 |- lifted_1555000 :: Map<Int,V> l_int_v_31160 -default-> lifted_1556000 :: Map<Int,V> l_int_v_4210;
    lifted_1556000 => Method(lifted_1390000, lifted_1391000, params1500000, e6300000);
    Map<String,Class> l_string_class_12330, Map<String,V> l_string_v_12290, This this_12340 |- params1500000 :: Map<Int,V> l_int_v_4210 -default-> lifted_169800 :: Map<Int,V> l_int_v_540;
    bindVars(lifted_169800, vs2700000) => lifted_1557000;
    T(o18300000) => lifted_169200;
    Map<String,Class> l_string_class_12330, Map<String,V> l_string_v_12290, This this_12340 |- lifted_1557000 :: Map<Int,V> l_int_v_540 -default-> lifted_169300 :: Map<Int,V> l_int_v_640;
    block2expr(e6300000) => lifted_169400;
    Map<String,Class> l_string_class_12330, Map<String,V> lifted_169300, This lifted_169200 |- lifted_169400 :: Map<Int,V> l_int_v_640 -default-> v'1300000 :: Map<Int,V> l_int_v_740;
    l_int_v_740 => l_int_v_out2240;
    v'1300000 => result_out2240.

  Map<String,Class> l_string_class_in2250, Map<String,V> l_string_v_in2250, This this_in2250 |- New(c37500000) :: Map<Int,V> l_int_v_in2250 -default-> result_out2250 :: Map<Int,V> l_int_v_out2250
  where
    l_string_class_in2250 => l_string_class_12340;
    l_string_v_in2250 => l_string_v_12310;
    this_in2250 => this_12350;
    l_int_v_in2250 => l_int_v_12310;
    loadClass(c37500000) => lifted_1443000;
    Map<String,Class> l_string_class_12340, Map<String,V> l_string_v_12310, This this_12350 |- lifted_1443000 :: Map<Int,V> l_int_v_12310 -default-> lifted_162700 :: Map<Int,V> l_int_v_21760;
    initObject(lifted_162700) => lifted_1442000;
    Map<String,Class> l_string_class_12340, Map<String,V> l_string_v_12310, This this_12350 |- lifted_1442000 :: Map<Int,V> l_int_v_21760 -default-> lifted_163100 :: Map<Int,V> l_int_v_31170;
    o2v(lifted_163100) => lifted_162900;
    l_int_v_31170 => l_int_v_out2250;
    lifted_162900 => result_out2250.

  Map<String,Class> l_string_class_in2260, Map<String,V> l_string_v_in2260, This this_in2260 |- This() :: Map<Int,V> l_int_v_in2260 -default-> result_out2260 :: Map<Int,V> l_int_v_out2260
  where
    l_string_class_in2260 => l_string_class_12350;
    l_string_v_in2260 => l_string_v_12320;
    this_in2260 => lifted_1405000;
    l_int_v_in2260 => l_int_v_12320;
    lifted_1405000 => T(o17700000);
    o2v(o17700000) => lifted_160500;
    l_int_v_12320 => l_int_v_out2260;
    lifted_160500 => result_out2260.

  Map<String,Class> l_string_class_in2270, Map<String,V> l_string_v_in2270, This this_in2270 |- Null(lifted_1372000) :: Map<Int,V> l_int_v_in2270 -default-> result_out2270 :: Map<Int,V> l_int_v_out2270
  where
    l_string_class_in2270 => l_string_class_12360;
    l_string_v_in2270 => l_string_v_12330;
    this_in2270 => this_12360;
    l_int_v_in2270 => l_int_v_12330;
    NullV() => lifted_1432000;
    l_int_v_12330 => l_int_v_out2270;
    lifted_1432000 => result_out2270.

  Map<String,Class> l_string_class_in2280, Map<String,V> l_string_v_in2280, This this_in2280 |- bindVar(x29000000, v18500000) :: Map<Int,V> l_int_v_in2280 -default-> result_out2280 :: Map<Int,V> l_int_v_out2280
  where
    l_string_class_in2280 => l_string_class_12370;
    l_string_v_in2280 => E4100000;
    this_in2280 => this_12370;
    l_int_v_in2280 => l_int_v_12340;
    {x29000000 |--> v18500000} => lifted_1573000;
    lifted_1573000 + E4100000 => lifted_1572000;
    l_int_v_12340 => l_int_v_out2280;
    lifted_1572000 => result_out2280.

  Map<String,Class> l_string_class_in2290, Map<String,V> l_string_v_in2290, This this_in2290 |- readVar(x28700000) :: Map<Int,V> l_int_v_in2290 -default-> result_out2290 :: Map<Int,V> l_int_v_out2290
  where
    l_string_class_in2290 => l_string_class_12380;
    l_string_v_in2290 => E3900000;
    this_in2290 => this_12380;
    l_int_v_in2290 => l_int_v_12350;
    E3900000[x28700000] => lifted_1415000;
    l_int_v_12350 => l_int_v_out2290;
    lifted_1415000 => result_out2290.

  Map<String,Class> l_string_class_in2310, Map<String,V> l_string_v_in2310, This this_in2310 |- bindVars(lifted_1563000, lifted_1564000) :: Map<Int,V> l_int_v_in2310 -default-> result_out2310 :: Map<Int,V> l_int_v_out2310
  where
    l_string_class_in2310 => l_string_class_12390;
    l_string_v_in2310 => l_string_v_12340;
    this_in2310 => this_12390;
    l_int_v_in2310 => l_int_v_12360;
    lifted_1563000 == [  ]
    < {
        lifted_1564000 == [  ];
        {} => lifted_1562000;
        lifted_1562000 : Map<String,V> => lifted_1561000;
        l_int_v_12360 => l_int_v_out2310;
        lifted_1561000 => result_out2310
      }
    + {
        lifted_1563000 => [ x28900000 | xs2400000 ];
        lifted_1564000 => [ v18400000 | vs2800000 ];
        bindVars(xs2400000, vs2800000) => lifted_1567000;
        Map<String,Class> l_string_class_12390, Map<String,V> l_string_v_12340, This this_12390 |- lifted_1567000 :: Map<Int,V> l_int_v_12360 -default-> E4000000 :: Map<Int,V> l_int_v_21770;
        {x28900000 |--> v18400000} => lifted_1569000;
        lifted_1569000 + E4000000 => lifted_1565000;
        l_int_v_21770 => l_int_v_out2310;
        lifted_1565000 => result_out2310
      }.

  Map<String,Class> l_string_class_in2320, Map<String,V> l_string_v_in2320, This this_in2320 |- allocate(v18600000) :: Map<Int,V> l_int_v_in2320 -default-> result_out2320 :: Map<Int,V> l_int_v_out2320
  where
    l_string_class_in2320 => l_string_class_12410;
    l_string_v_in2320 => l_string_v_12350;
    this_in2320 => this_12410;
    l_int_v_in2320 => l_int_v_12370;
    fresh => loc3800000;
    write(loc3800000, v18600000) => lifted_1582000;
    Map<String,Class> l_string_class_12410, Map<String,V> l_string_v_12350, This this_12410 |- lifted_1582000 :: Map<Int,V> l_int_v_12370 -default-> lifted_1393000 :: Map<Int,V> l_int_v_21780;
    l_int_v_21780 => l_int_v_out2320;
    loc3800000 => result_out2320.

  Map<String,Class> l_string_class_in2330, Map<String,V> l_string_v_in2330, This this_in2330 |- write(loc3600000, v17600000) :: Map<Int,V> l_int_v_in2330 -default-> result_out2330 :: Map<Int,V> l_int_v_out2330
  where
    l_string_class_in2330 => l_string_class_12420;
    l_string_v_in2330 => l_string_v_12360;
    this_in2330 => this_12420;
    l_int_v_in2330 => S2400000;
    {loc3600000 |--> v17600000} => lifted_1401000;
    lifted_1401000 + S2400000 => lifted_1400000;
    lifted_1400000 => l_int_v_out2330;
    v17600000 => result_out2330.

  Map<String,Class> l_string_class_in2340, Map<String,V> l_string_v_in2340, This this_in2340 |- read(loc3700000) :: Map<Int,V> l_int_v_in2340 -default-> result_out2340 :: Map<Int,V> l_int_v_out2340
  where
    l_string_class_in2340 => l_string_class_12430;
    l_string_v_in2340 => l_string_v_12370;
    this_in2340 => this_12430;
    l_int_v_in2340 => S2500000;
    S2500000[loc3700000] => lifted_1419000;
    S2500000 => l_int_v_out2340;
    lifted_1419000 => result_out2340.

  Map<String,Class> l_string_class_in235, Map<String,V> l_string_v_in235, This this_in235 |- lifted_1589000 : List(Expr) :: Map<Int,V> l_int_v_in235 -default-> result_out235 :: Map<Int,V> l_int_v_out235
  where
    l_string_class_in235 => l_string_class_12450;
    l_string_v_in235 => l_string_v_12390;
    this_in235 => this_12450;
    l_int_v_in235 => l_int_v_12390;
    lifted_1589000 == [  ]
    < {
        [  ] : List(V) => lifted_1588000;
        l_int_v_12390 => l_int_v_out235;
        lifted_1588000 => result_out235
      }
    + {
        lifted_1589000 => [ lifted_1592000 | es600000 ];
        Map<String,Class> l_string_class_12450, Map<String,V> l_string_v_12390, This this_12450 |- lifted_1592000 :: Map<Int,V> l_int_v_12390 -default-> v18700000 :: Map<Int,V> l_int_v_21790;
        Map<String,Class> l_string_class_12450, Map<String,V> l_string_v_12390, This this_12450 |- es600000 :: Map<Int,V> l_int_v_21790 -default-> vs2900000 :: Map<Int,V> l_int_v_31180;
        [ v18700000 | vs2900000 ] => lifted_1591000;
        l_int_v_31180 => l_int_v_out235;
        lifted_1591000 => result_out235
      }.

  Map<String,Class> l_string_class_in236, Map<String,V> l_string_v_in236, This this_in236 |- lifted_1595000 : List(Param) :: Map<Int,V> l_int_v_in236 -default-> result_out236 :: Map<Int,V> l_int_v_out236
  where
    l_string_class_in236 => l_string_class_12470;
    l_string_v_in236 => l_string_v_12420;
    this_in236 => this_12470;
    l_int_v_in236 => l_int_v_12420;
    lifted_1595000 == [  ]
    < {
        [  ] : List(String) => lifted_1594000;
        l_int_v_12420 => l_int_v_out236;
        lifted_1594000 => result_out236
      }
    + {
        lifted_1595000 => [ lifted_1597000 | params1600000 ];
        lifted_1597000 => Param(lifted_1394000, x29100000);
        Map<String,Class> l_string_class_12470, Map<String,V> l_string_v_12420, This this_12470 |- params1600000 :: Map<Int,V> l_int_v_12420 -default-> xs2500000 :: Map<Int,V> l_int_v_21810;
        [ x29100000 | xs2500000 ] => lifted_1596000;
        l_int_v_21810 => l_int_v_out236;
        lifted_1596000 => result_out236
      }.