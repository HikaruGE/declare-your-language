module desugar/desugar-types

imports src-gen/signatures/Expressions-sig

imports lib/editor-common.generated
imports lib/runtime/analysis/-
imports lib/runtime/index/-
imports lib/runtime/nabl/-
imports lib/runtime/properties/-
imports lib/runtime/types/-
imports lib/runtime/task/-
imports lib/runtime/editor/-

// strategies
//   
//   desugar-types = 
//     innermost(desugar-get <+ desugar-set)

signature
  constructors
    Get : Expr * String * String -> Expr
    Set : Expr * String * String * Expr -> Expr
    
rules
  
  desugar-get :
    Get(e, f) -> Get(e, t, f)
    where dbg(|"desugar-get: "); t := <get-class-of-field> f
      
  desugar-set : 
    Set(e1, f, e2) -> Set(e1, t, f, e2)
    where dbg(|"desugar-set: "); t := <get-class-of-field> f
    
    // instead of <get-type> e1
  
  get-type-na =
    get-type; strip-annos
    
signature
  constructors
    URI : A * A -> A
    Language : String -> A
    ID : A * A * A -> A
    
rules // hack
  
  get-class-of-field :
    f -> ClassT(c)
    where <has-annos; get-annos; fetch-elem(?Use(<id>)); task-get-results; Hd>f =>
               Def(URI(Language(_),[ID(NablNsField,_,_), ID(NablNsClass,c,_) | _]))
    
  // get-class-of-field :
  //  f -> ClassT(name)
  //  where ClassT(c) := <get-type> f; 
  //        debug(!"type: ");
  //        uri := <nabl-uri>c; 
  //        debug(!"uri: ");
  //        parent := <nabl-uri-parent> uri; 
  //        debug(!"parent: ");
  //        name := <nabl-uri-name> parent;
  //        debug(!"name: ")  