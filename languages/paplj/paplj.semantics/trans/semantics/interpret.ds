module trans/semantics/interpret

imports trans/semantics/values

signature
  arrows 
    Program --> V 
    Expr --> V  
    List(Expr) --> List(V)

rules

  Program(_, cs, e) --> v  
  where C initClasses(cs) |- e --> v.
    
rules // boolean expressions
   
  True()  --> BoolV(true).
  
  False() --> BoolV(false). 
  
  And(e, _) --> BoolV(false)
  where e --> BoolV(false).
  
  And(e1, e2) --> v
  where 
    e1 --> BoolV(true); 
    e2 --> v.
  
rules // arithmetic expressions
  
  Num(i) --> NumV(str2int(i)).
    
  Add(e1, e2) --> NumV(plusI(i, j))
  where 
    e1 --> NumV(i);
    e2 --> NumV(j).

